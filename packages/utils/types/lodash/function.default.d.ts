import { default as after } from './after';
import { default as ary } from './ary';
import { default as before } from './before';
import { default as bind } from './bind';
import { default as bindKey } from './bindKey';
import { default as curry } from './curry';
import { default as curryRight } from './curryRight';
import { default as debounce } from './debounce';
import { default as defer } from './defer';
import { default as delay } from './delay';
import { default as flip } from './flip';
import { default as memoize } from './memoize';
import { default as negate } from './negate';
import { default as once } from './once';
import { default as overArgs } from './overArgs';
import { default as partial } from './partial';
import { default as partialRight } from './partialRight';
import { default as rearg } from './rearg';
import { default as rest } from './rest';
import { default as spread } from './spread';
import { default as throttle } from './throttle';
import { default as unary } from './unary';
import { default as wrap } from './wrap';
declare const defaultExport: {
    after: typeof after;
    ary: typeof ary;
    before: typeof before;
    bind: typeof bind;
    bindKey: typeof bindKey;
    curry: typeof curry;
    curryRight: typeof curryRight;
    debounce: typeof debounce;
    defer: typeof defer;
    delay: typeof delay;
    flip: typeof flip;
    memoize: typeof memoize;
    negate: typeof negate;
    once: typeof once;
    overArgs: typeof overArgs;
    partial: typeof partial;
    partialRight: typeof partialRight;
    rearg: typeof rearg;
    rest: typeof rest;
    spread: typeof spread;
    throttle: typeof throttle;
    unary: typeof unary;
    wrap: typeof wrap;
};
export default defaultExport;
